<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>NITISH APP</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Rubik+Wet+Paint&display=swap');

    :root {
      --bg-color: #ffffff;
    }

    body {
      font-family: Arial, sans-serif;
      background-color: var(--bg-color);
      padding: 20px;
      transition: background-color 0.3s ease;
    }
    h1 {
      text-align: center;
      color: #333;
    }
    .container {
      max-width: 1000px;
      margin: auto;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      position: relative;
      padding-top: 140px;
    }
    input, select, button {
      padding: 10px;
      margin: 10px 0;
      width: 100%;
      font-size: 16px;
      transition: all 0.3s ease;
    }
    select:focus, button:hover {
      font-family: 'Rubik Wet Paint', cursive;
      color: #fff;
      background: linear-gradient(to right, #ff416c, #ff4b2b);
      transform: scale(1.05);
    }
    .product {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
      gap: 10px;
      padding: 10px 0;
      border-bottom: 1px solid #ddd;
      align-items: center;
    }
    .status-delivered {
      color: green;
      font-weight: bold;
    }
    .status-coming {
      color: orange;
      font-weight: bold;
    }
    .status-cashed {
      color: red;
      font-weight: bold;
    }
    .headers {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
      font-weight: bold;
      border-bottom: 2px solid #333;
      margin-top: 20px;
      padding-bottom: 5px;
    }
    img.product-image, img.passport-image, img.preview-image {
      width: 50px;
      height: 50px;
      object-fit: cover;
      border-radius: 5px;
    }
    .theme-selector {
      margin-bottom: 20px;
    }
    .user-history {
      margin-top: 40px;
    }
    .user-history h2 {
      margin-top: 0;
    }
    .passport-upload {
      position: absolute;
      top: 20px;
      left: 20px;
      text-align: center;
      width: 120px;
      background: #f9f9f9;
      padding: 10px;
      border-radius: 10px;
      box-shadow: 0 0 5px rgba(0,0,0,0.1);
    }
    .passport-upload input {
      width: 100%;
    }
    #passportPreview {
      margin-top: 10px;
    }
    #productImagePreview {
      margin-top: 10px;
    }
  </style>
</head>
<body>

  <h1>NITISH APP</h1>
  <div class="container">
    <div class="passport-upload">
      <label>Optional Passport Size Photo:</label>
      <input type="file" id="passportPhoto" accept="image/*" onchange="showPassportPhoto(event)" />
      <div id="passportPreview"></div>
    </div>

    <div class="theme-selector">
      <label for="theme">Choose Background Color: </label>
      <select id="theme" onchange="changeTheme()">
        <option value="white">White</option>
        <option value="black">Black</option>
        <option value="blue">Blue</option>
        <option value="red">Red</option>
      </select>
    </div>

    <input type="text" id="userId" placeholder="Enter user ID (unique number)" />
    <input type="number" id="productPrice" placeholder="Enter price (in ₹)" />
    <input type="text" id="productName" placeholder="Enter product name" />
    <input type="number" id="productAmount" placeholder="Enter Quantity" />
    <select id="productStatus">
      <option value="">-- Optional: Select Status --</option>
      <option value="coming">Coming</option>
      <option value="delivered">Delivered</option>
      <option value="cashed">Cashed Out</option>
    </select>
    <input type="file" id="productImage" accept="image/*" onchange="previewProductImage(event)" />
    <div id="productImagePreview"></div>
    <button onclick="addProduct()">Add Product</button>

    <div class="headers">
      <span>User ID</span>
      <span>Price</span>
      <span>Product Name</span>
      <span>QUANTITY</span>
      <span>Status</span>
      <span>Image</span>
    </div>
    <div id="productList"></div>

    <div class="user-history" id="userHistory"></div>
  </div>

  <script>
    let products = JSON.parse(localStorage.getItem('products')) || [];

    function changeTheme() {
      const selected = document.getElementById('theme').value;
      let color;
      switch (selected) {
        case 'black': color = '#000000'; break;
        case 'blue': color = '#007BFF'; break;
        case 'red': color = '#FF4C4C'; break;
        default: color = '#FFFFFF';
      }
      document.body.style.setProperty('--bg-color', color);
    }

    function showPassportPhoto(event) {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('passportPreview').innerHTML = `<img class="passport-image" src="${e.target.result}" alt="Passport Photo" />`;
        };
        reader.readAsDataURL(file);
      }
    }

    function previewProductImage(event) {
      const file = event.target.files[0];
      const preview = document.getElementById('productImagePreview');
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          preview.innerHTML = `<img class="preview-image" src="${e.target.result}" alt="Product Preview" />`;
        };
        reader.readAsDataURL(file);
      } else {
        preview.innerHTML = '';
      }
    }

    function addProduct() {
      const userId = document.getElementById('userId').value.trim();
      const name = document.getElementById('productName').value.trim();
      const price = parseFloat(document.getElementById('productPrice').value.trim());
      const amount = parseInt(document.getElementById('productAmount').value.trim());
      const status = document.getElementById('productStatus').value;
      const imageInput = document.getElementById('productImage');
      const file = imageInput?.files[0];

      if (!userId || !name || isNaN(price) || isNaN(amount)) {
        alert('Please fill in all required fields.');
        return;
      }

      if (products.length >= 1000) {
        alert('Product limit reached (1000).');
        return;
      }

      const reader = new FileReader();
      reader.onload = function(e) {
        const imageUrl = e.target.result;
        products.push({ userId, name, price, amount, status, imageUrl });
        localStorage.setItem('products', JSON.stringify(products));
        renderProducts();
        clearInputs();
      };

      if (file) {
        reader.readAsDataURL(file);
      } else {
        products.push({ userId, name, price, amount, status, imageUrl: '' });
        localStorage.setItem('products', JSON.stringify(products));
        renderProducts();
        clearInputs();
      }
    }

    function clearInputs() {
      document.getElementById('userId').value = '';
      document.getElementById('productName').value = '';
      document.getElementById('productPrice').value = '';
      document.getElementById('productAmount').value = '';
      document.getElementById('productImage').value = '';
      document.getElementById('productImagePreview').innerHTML = '';
      document.getElementById('productStatus').value = '';
    }

    function renderProducts() {
      const list = document.getElementById('productList');
      list.innerHTML = '';
      products.forEach((product) => {
        const div = document.createElement('div');
        div.classList.add('product');
        div.innerHTML = `
          <span><a href="#" onclick="showUserHistory('${product.userId}')">${product.userId}</a></span>
          <span>₹${product.price}</span>
          <span>${product.name}</span>
          <span>${product.amount}</span>
          <span class="status-${product.status}">${product.status || '-'}</span>
          <span>${product.imageUrl ? `<img class="product-image" src="${product.imageUrl}" alt="Product Image" />` : '-'}</span>
        `;
        list.appendChild(div);
      });
    }

    function showUserHistory(userId) {
      const userProducts = products.filter(p => p.userId === userId);
      const totalPrice = userProducts.reduce((sum, p) => sum + (p.price * p.amount), 0);
      const totalDeliveries = userProducts.length;
      const delivered = userProducts.filter(p => p.status === 'delivered').length;

      const historyDiv = document.getElementById('userHistory');
      historyDiv.innerHTML = `
        <h2>History for User ID: ${userId}</h2>
        <p>Total Products: ${totalDeliveries}</p>
        <p>Delivered: ${delivered}</p>
        <p>Total Price of All Products: ₹${totalPrice.toFixed(2)}</p>
        <ul>
          ${userProducts.map(p => `<li>${p.name} - ₹${p.price} x ${p.amount} (${p.status || 'no status'})</li>`).join('')}
        </ul>
      `;
    }

    window.onload = renderProducts;
  </script>

</body>
</html>
